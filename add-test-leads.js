require('dotenv').config();
const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = process.env.SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

const supabase = createClient(supabaseUrl, supabaseKey);

async function addTestLeads() {
    console.log('üîÑ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ª–∏–¥–æ–≤...');
    
    const testLeads = [
        { name: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤', phone: '+7 (999) 123-45-67' },
        { name: '–û–û–û "–†–æ–º–∞—à–∫–∞"', phone: '+7 (495) 123-45-67' },
        { name: '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞', phone: '+7 (812) 987-65-43' },
        { name: '–ó–ê–û "–°–æ–ª–Ω—ã—à–∫–æ"', phone: '+7 (495) 555-12-34' },
        { name: '–ê–ª–µ–∫—Å–µ–π –ö–æ–∑–ª–æ–≤', phone: '+1 (555) 123-4567' },
        { name: '–û–û–û "–í–µ—Å–Ω–∞"', phone: '+7 (495) 777-88-99' },
        { name: '–ï–ª–µ–Ω–∞ –í–æ–ª–∫–æ–≤–∞', phone: '+7 (812) 333-22-11' },
        { name: '–ò–ü –°–º–∏—Ä–Ω–æ–≤', phone: '+7 (999) 888-77-66' },
        { name: '–û–û–û "–ó–∏–º–∞"', phone: '+7 (495) 111-22-33' },
        { name: '–î–∂–æ–Ω –°–º–∏—Ç', phone: '+1 (555) 987-6543' },
        { name: '–ê–Ω–Ω–∞ –ë–µ–ª–æ–≤–∞', phone: '+7 (812) 444-55-66' },
        { name: '–û–û–û "–õ–µ—Ç–æ"', phone: '+7 (495) 666-77-88' },
        { name: '–ü–µ—Ç—Ä –ò–≤–∞–Ω–æ–≤', phone: '+7 (999) 555-44-33' },
        { name: '–ó–ê–û "–û—Å–µ–Ω—å"', phone: '+7 (495) 999-88-77' },
        { name: '–ú–∞–π–∫ –î–∂–æ–Ω—Å–æ–Ω', phone: '+1 (555) 456-7890' }
    ];

    try {
        for (const lead of testLeads) {
            const { data, error } = await supabase
                .from('leads')
                .insert([{
                    name: lead.name,
                    phone: lead.phone,
                    status: 'new',
                    created_at: new Date().toISOString()
                }]);

            if (error) {
                console.error(`‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ª–∏–¥–∞ ${lead.name}:`, error.message);
            } else {
                console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –ª–∏–¥: ${lead.name}`);
            }
        }
        
        console.log('üéâ –¢–µ—Å—Ç–æ–≤—ã–µ –ª–∏–¥—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã!');
    } catch (error) {
        console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error.message);
    }
}

addTestLeads();

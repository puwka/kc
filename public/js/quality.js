let currentUser=null;
let projects = [];
let reviews = [];

document.addEventListener('DOMContentLoaded',()=>{init()});

async function init(){
  const token=localStorage.getItem('token');
  if(!token){window.location.href='/login.html';return}
  await loadMe(token);
  setupUI();
  bindEvents();
  loadProjects();
  loadAnalytics();
  loadReviews();
  
  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞—è–≤–æ–∫ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
  setInterval(() => {
    loadReviews();
  }, 5000);
}

function setupUI(){
  document.getElementById('navUser').style.display='flex';
  document.getElementById('userName').textContent=currentUser.name;
}

async function loadAnalytics(){
  try{
    // –û—Ç–¥–µ–ª—å–Ω—ã–π —Ç–æ—á–Ω—ã–π –æ–±–∑–æ—Ä –¥–ª—è –∫–∞—á–µ—Å—Ç–≤–∞
    const resp=await fetch('/api/quality/overview',{headers:{'Authorization':`Bearer ${localStorage.getItem('token')}`}});
    if(!resp.ok){throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏')}
    const stats=await resp.json();
    renderAnalytics(stats);
  }catch(e){notify(e.message,'error')}
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∑–∞—è–≤–æ–∫
async function lockReview(reviewId) {
  try {
    const resp = await fetch(`/api/quality/reviews/${reviewId}/lock`, {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${localStorage.getItem('token')}`,
        'Content-Type': 'application/json'
      }
    });
    
    const result = await resp.json();
    
    if (!resp.ok) {
      if (resp.status === 409) {
        notify(`‚ùå –ó–∞—è–≤–∫–∞ —É–∂–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º: ${result.locked_by_name}`, 'warning');
      } else {
        throw new Error(result.error || '–û—à–∏–±–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∑–∞—è–≤–∫–∏');
      }
      return;
    }
    
    notify('‚úÖ –ó–∞—è–≤–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞', 'success');
    loadReviews(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
  } catch (e) {
    console.error('Error locking review:', e);
    notify(`‚ùå –û—à–∏–±–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: ${e.message}`, 'error');
  }
}

async function unlockReview(reviewId) {
  try {
    const resp = await fetch(`/api/quality/reviews/${reviewId}/unlock`, {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${localStorage.getItem('token')}`,
        'Content-Type': 'application/json'
      }
    });
    
    const result = await resp.json();
    
    if (!resp.ok) {
      throw new Error(result.error || '–û—à–∏–±–∫–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∑–∞—è–≤–∫–∏');
    }
    
    notify('‚úÖ –ó–∞—è–≤–∫–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞', 'success');
    loadReviews(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
  } catch (e) {
    console.error('Error unlocking review:', e);
    notify(`‚ùå –û—à–∏–±–∫–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: ${e.message}`, 'error');
  }
}


function renderAnalytics(s){
  const box=document.getElementById('analyticsSection');
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ –∂–µ –∫–∞—Ä—Ç–æ—á–∫–∏, —á—Ç–æ –∏ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π: called, success, conversion, earnings
  const called=s.processed||0;
  const success=s.approved||0;
  const conversion=(s.conversion_rate*100||0).toFixed(1)+'%';
  const earnings=(s.earnings||0).toFixed(2)+' ‚ÇΩ';
  box.innerHTML=`
    <div class="stat-card">
      <div class="stat-value">${called}</div>
      <div class="stat-label">–ü—Ä–æ–≤–µ—Ä–µ–Ω–æ</div>
    </div>
    <div class="stat-card">
      <div class="stat-value">${success}</div>
      <div class="stat-label">–û–¥–æ–±—Ä–µ–Ω–æ</div>
    </div>
    <div class="stat-card">
      <div class="stat-value">${conversion}</div>
      <div class="stat-label">–ö–æ–Ω–≤–µ—Ä—Å–∏—è</div>
    </div>
    <div class="stat-card">
      <div class="stat-value">${earnings}</div>
      <div class="stat-label">–ó–∞—Ä–∞–±–æ—Ç–æ–∫</div>
    </div>
    <div class="stat-card">
      <div class="stat-value">${s.avg_review_minutes||0} –º–∏–Ω</div>
      <div class="stat-label">–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏</div>
    </div>
    <div class="stat-card">
      <div class="stat-value">${s.avg_pending_wait_minutes||0} –º–∏–Ω</div>
      <div class="stat-label">–°—Ä–µ–¥–Ω–µ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –≤ –æ—á–µ—Ä–µ–¥–∏</div>
    </div>`;
}

function bindEvents(){
  document.getElementById('logoutBtn').addEventListener('click',()=>{localStorage.clear();window.location.href='/login.html'});
  document.getElementById('refreshBtn').addEventListener('click',loadReviews);
  document.getElementById('statusFilter').addEventListener('change',loadReviews);
  document.getElementById('projectFilter').addEventListener('change',filterRows);
  const search=document.getElementById('searchInput');
  if(search){
    search.addEventListener('input',()=>filterRows(search.value));
  }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å —Ü–µ–Ω–∞–º–∏
async function loadProjects() {
  try {
    const response = await fetch('/api/quality/projects', {
      headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }
    });
    if (!response.ok) throw new Error('Failed to fetch projects');
    projects = await response.json();
    populateProjectFilter();
  } catch (error) {
    console.error('Error loading projects:', error);
  }
}

// –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤
function populateProjectFilter() {
  const select = document.getElementById('projectFilter');
  select.innerHTML = '<option value="">–í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã</option>';
  projects.forEach(project => {
    const option = document.createElement('option');
    option.value = project.name;
    option.textContent = `${project.name} (${project.success_price}‚ÇΩ)`;
    select.appendChild(option);
  });
}

async function loadMe(token){
  const resp=await fetch('/api/auth/me',{headers:{'Authorization':`Bearer ${token}`}});
  const data=await resp.json();
  currentUser=data.user;
  if(currentUser.role!=='quality'&&currentUser.role!=='admin'){window.location.href='/';}
}

async function loadReviews(){
  try{
    const status=document.getElementById('statusFilter').value;
    const resp=await fetch(`/api/quality/reviews?status=${encodeURIComponent(status)}`,{headers:{'Authorization':`Bearer ${localStorage.getItem('token')}`}});
    if(!resp.ok){throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞—è–≤–æ–∫')}
    const rows=await resp.json();
    renderReviews(rows);
  }catch(e){notify(e.message,'error')}
}

function renderReviews(rows){
  const container=document.getElementById('reviewsTableBody');
  container.innerHTML='';
  // KPI –±–ª–æ–∫
  renderKPI(rows);
  if(!rows||rows.length===0){
    container.innerHTML=`
      <div class="review-empty">
        <div class="review-empty-icon">üìã</div>
        <div>–ó–∞—è–≤–æ–∫ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–µ—Ç</div>
        <div style="font-size: 14px; margin-top: 8px; opacity: 0.7;">–í—Å–µ –ª–∏–¥—ã –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã</div>
      </div>
    `;
    return;
  }
  rows.forEach(r=>{
    const lead=r.leads||{};
    const project = lead.project || '–ù–µ —É–∫–∞–∑–∞–Ω';
    const projectPrice = projects.find(p => p.name === project)?.success_price || 3.00;
    
    // –ü–µ—Ä–µ–≤–æ–¥–∏–º —Å—Ç–∞—Ç—É—Å—ã
    const statusText = {
      'pending': '–í –æ–∂–∏–¥–∞–Ω–∏–∏',
      'approved': '–û–¥–æ–±—Ä–µ–Ω–æ',
      'rejected': '–û—Ç–∫–ª–æ–Ω–µ–Ω–æ'
    }[r.status] || r.status;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ (–ø–æ–ª—É—á–∞–µ–º –∏–∑ –∫—ç—à–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)
    const isLocked = r.is_locked || false;
    const lockedByName = r.locked_by_name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä';
    const isLockedByMe = currentUser && r.locked_by === currentUser.id;
    
    const card=document.createElement('div');
    card.className=`review-card ${isLocked ? 'locked' : ''}`;
    card.innerHTML=`
      <div class="review-header">
        <div class="review-lead-info">
          <div class="review-lead-name">${lead.name||'–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
          <div class="review-phone">${lead.phone||'–¢–µ–ª–µ—Ñ–æ–Ω –Ω–µ —É–∫–∞–∑–∞–Ω'}</div>
        </div>
        <div class="review-status ${r.status}">${statusText}</div>
      </div>
      
      <div class="review-details">
        <div class="review-detail">
          <div class="review-detail-label">–ü—Ä–æ–µ–∫—Ç</div>
          <div class="review-project">${project}</div>
        </div>
        <div class="review-detail">
          <div class="review-detail-label">–°—Ç–æ–∏–º–æ—Å—Ç—å</div>
          <div class="review-cost">${projectPrice}‚ÇΩ</div>
        </div>
      </div>
      
      <div class="review-created">
        –°–æ–∑–¥–∞–Ω–æ: ${new Date(r.created_at).toLocaleString('ru-RU', {
          day: '2-digit',
          month: '2-digit', 
          year: 'numeric',
          hour: '2-digit',
          minute: '2-digit'
        })}
      </div>
      
      ${isLocked ? `
        <div class="review-locked">
          üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ: ${lockedByName}
        </div>
      ` : ''}
      
      <div class="review-actions">
        ${isLocked ? (
          isLockedByMe ? `
            <a href="/quality-review.html?id=${r.id}" class="review-action-btn check">
              üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å
            </a>
            <button onclick="unlockReview('${r.id}')" class="review-action-btn unlock">
              üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å
            </button>
          ` : `
            <div class="review-action-btn disabled">
              üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ
            </div>
          `
        ) : `
          <button onclick="lockReview('${r.id}')" class="review-action-btn lock">
            üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å
          </button>
        `}
        <button onclick="approve('${r.id}')" class="review-action-btn approve" ${isLocked && !isLockedByMe ? 'disabled' : ''}>
          ‚úÖ –û–¥–æ–±—Ä–∏—Ç—å
        </button>
        <button onclick="reject('${r.id}')" class="review-action-btn reject" ${isLocked && !isLockedByMe ? 'disabled' : ''}>
          ‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å
        </button>
      </div>
    `;
    container.appendChild(card);
  });
}

function openReview(id){
  window.location.href=`/quality-review.html?id=${encodeURIComponent(id)}`;
}

function filterRows(query){
  query=(query||'').toLowerCase();
  const statusFilter = document.getElementById('statusFilter').value;
  const projectFilter = document.getElementById('projectFilter').value;
  
  const cards=[...document.querySelectorAll('#reviewsTableBody .review-card')];
  cards.forEach(card=>{
    const text=card.innerText.toLowerCase();
    const statusMatch = !statusFilter || card.querySelector('.review-status')?.textContent.toLowerCase() === statusFilter.toLowerCase();
    const projectMatch = !projectFilter || text.includes(projectFilter.toLowerCase());
    const searchMatch = !query || text.includes(query);
    
    card.style.display=(statusMatch && projectMatch && searchMatch)?'':'none';
  });
}

function renderKPI(rows){
  const box=document.getElementById('kpiRow');
  if(!box) return;
  const total=rows.length;
  const withPhone=rows.filter(r=> (r.leads?.phone||'').length>0).length;
  const pending=rows.filter(r=> r.status==='pending').length;
  const avgQueueTime='‚Äî';
  box.innerHTML=`
    <div class="kpi"><span class="icon">üìã</span><div><div class="value">${total}</div><div class="label">–≤ —Å–ø–∏—Å–∫–µ</div></div></div>
    <div class="kpi"><span class="icon">üìû</span><div><div class="value">${withPhone}</div><div class="label">—Å —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º</div></div></div>
    <div class="kpi"><span class="icon">‚è≥</span><div><div class="value">${pending}</div><div class="label">–≤ –æ–∂–∏–¥–∞–Ω–∏–∏</div></div></div>
    <div class="kpi"><span class="icon">‚åõ</span><div><div class="value">${avgQueueTime}</div><div class="label">—Å—Ä–µ–¥. –æ–∂–∏–¥–∞–Ω–∏–µ</div></div></div>
  `;
}

async function approve(id){
  try{
    const comment = prompt('–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –û–ö–ö (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):') || '';
    const resp=await fetch(`/api/quality/reviews/${id}/approve`,{method:'POST',headers:{'Authorization':`Bearer ${localStorage.getItem('token')}`,'Content-Type':'application/json'},body:JSON.stringify({comment})});
    if(!resp.ok){throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–¥–æ–±—Ä–∏—Ç—å')}
    const result = await resp.json();
    notify(`–û–¥–æ–±—Ä–µ–Ω–æ! –û–ø–µ—Ä–∞—Ç–æ—Ä—É –∑–∞—á–∏—Å–ª–µ–Ω–æ ${result.amount}‚ÇΩ –∑–∞ –ø—Ä–æ–µ–∫—Ç "${result.project}"`,'success');
    loadReviews();
  }catch(e){notify(e.message,'error')}
}

async function reject(id){
  try{
    const comment = prompt('–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):') || '';
    const resp=await fetch(`/api/quality/reviews/${id}/reject`,{method:'POST',headers:{'Authorization':`Bearer ${localStorage.getItem('token')}`,'Content-Type':'application/json'},body:JSON.stringify({comment})});
    if(!resp.ok){throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫–ª–æ–Ω–∏—Ç—å')}
    notify('–û—Ç–∫–ª–æ–Ω–µ–Ω–æ','warning');
    loadReviews();
  }catch(e){notify(e.message,'error')}
}

function notify(message,type='info'){
  const box=document.getElementById('notifications');
  const el=document.createElement('div');
  el.className=`notification ${type}`;
  el.textContent=message;
  box.appendChild(el);
  setTimeout(()=>el.remove(),3000);
}

let currentUser=null;

// ====== –£—Ç–∏–ª–∏—Ç—ã ======

function notify(message,type='info'){
  const box=document.getElementById('notifications');
  const el=document.createElement('div');
  el.className=`notification ${type}`;
  el.textContent=message;
  box.appendChild(el);
  setTimeout(()=>el.remove(),3000);
}

// ====== –°–∏—Å—Ç–µ–º–∞ –æ—á–µ—Ä–µ–¥–∏ –û–ö–ö ======

// –ü–æ–ª—É—á–∏—Ç—å —Å–ª–µ–¥—É—é—â—É—é –∑–∞—è–≤–∫—É
async function getNextReview() {
  const btn = document.getElementById('getNextReviewBtn');
  
  try {
    btn.classList.add('loading');
    btn.disabled = true;
    btn.textContent = '‚è≥ –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏...';

    const response = await fetch('/api/quality/next-review', {
      method: 'GET',
      headers: {
        'Authorization': `Bearer ${localStorage.getItem('token')}`
      }
    });

    const data = await response.json();

    if (!response.ok) {
      notify(data.error || '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—è–≤–∫–∏', 'error');
      return;
    }

    if (!data.success) {
      notify(data.message || '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞—è–≤–æ–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏', 'warning');
      return;
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ—á–µ—Ä–µ–¥–∏
    loadQueueStats();
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞—è–≤–∫–∏
    window.location.href = `/quality-review.html?id=${data.review.id}`;
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—è–≤–∫–∏:', error);
    notify('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏', 'error');
  } finally {
    btn.classList.remove('loading');
    btn.disabled = false;
    btn.textContent = 'üìã –ü–æ–ª—É—á–∏—Ç—å –∑–∞—è–≤–∫—É';
  }
}


// –û—Å–≤–æ–±–æ–¥–∏—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞
async function releaseOperator() {
  try {
    const response = await fetch('/api/quality/release-operator', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${localStorage.getItem('token')}`
      }
    });

    if (!response.ok) {
      const data = await response.json();
      notify(data.error || '–û—à–∏–±–∫–∞ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞', 'error');
      return;
    }

    notify('–û–ø–µ—Ä–∞—Ç–æ—Ä –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω', 'success');

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞:', error);
    notify('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞', 'error');
  }
}

// –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ
window.getNextReview = getNextReview;
window.releaseOperator = releaseOperator;
window.notify = notify;


document.addEventListener('DOMContentLoaded',()=>{init()});

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
setTimeout(() => {
  setupUserMenu();
}, 2000);

async function init(){
  const token=localStorage.getItem('token');
  if(!token){window.location.href='/login.html';return}
  await loadMe(token);
  setupUI();
  bindEvents();
  loadAnalytics();
  loadQueueStats();
  
  setupStickyHeader();
  

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
setInterval(() => {
  loadAnalytics();
}, 5 * 60 * 1000);

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—á–µ—Ä–µ–¥–∏ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
setInterval(() => {
  loadQueueStats();
}, 30 * 1000);

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É (–∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç—Å—è –º–µ–∂–¥—É –≤–∫–ª–∞–¥–∫–∞–º–∏)
document.addEventListener('visibilitychange', () => {
  if (!document.hidden) {
    loadAnalytics();
    loadQueueStats();
  }
});

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ –Ω–∞ –æ–∫–Ω–µ
window.addEventListener('focus', () => {
  loadAnalytics();
  loadQueueStats();
});

// –£–¥–∞–ª–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –∏–∑ –æ—á–µ—Ä–µ–¥–∏ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.addEventListener('beforeunload', async () => {
  try {
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –æ—á–µ—Ä–µ–¥–∏ (–±–µ–∑ –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞)
    fetch('/api/quality/remove-operator', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${localStorage.getItem('token')}`,
        'Content-Type': 'application/json'
      },
      keepalive: true // –ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å—É –≤—ã–ø–æ–ª–Ω–∏—Ç—å—Å—è –¥–∞–∂–µ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    });
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏–∑ –æ—á–µ—Ä–µ–¥–∏ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏:', error);
  }
});
}

function setupUI(){
  document.getElementById('navUser').style.display='flex';
  document.getElementById('userName').textContent=currentUser.name;
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–µ–Ω—é —Å—Ä–∞–∑—É
  setupUserMenu();
}

function setupUserMenu() {
  // –ñ–¥–µ–º –ø–æ–∫–∞ —ç–ª–µ–º–µ–Ω—Ç—ã –∑–∞–≥—Ä—É–∑—è—Ç—Å—è
  const checkElements = () => {
    const userName = document.getElementById('userName');
    const userDropdown = document.getElementById('userDropdown');
    
    if (!userName || !userDropdown) {
      setTimeout(checkElements, 100);
      return;
    }
    
    // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    userName.onclick = null;
    userName.onmousedown = null;
    userName.onmouseup = null;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
    userName.onclick = function(e) {
      e.preventDefault();
      e.stopPropagation();
      
      if (userDropdown.style.display === 'block' || userDropdown.style.display === '') {
        userDropdown.style.display = 'none';
      } else {
        userDropdown.style.display = 'block';
      }
    };
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –≤—ã—Ö–æ–¥–∞
    const logoutBtn = document.getElementById('logoutBtn');
    if (logoutBtn) {
      logoutBtn.onclick = async function(e) {
        e.preventDefault();
        e.stopPropagation();
        
        try {
          // –£–¥–∞–ª—è–µ–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –∏–∑ –æ—á–µ—Ä–µ–¥–∏ –û–ö–ö
          console.log('üóëÔ∏è –£–¥–∞–ª—è–µ–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –∏–∑ –æ—á–µ—Ä–µ–¥–∏ –û–ö–ö...');
          await fetch('/api/quality/remove-operator', {
            method: 'POST',
            headers: {
              'Authorization': `Bearer ${localStorage.getItem('token')}`,
              'Content-Type': 'application/json'
            }
          });
          console.log('‚úÖ –û–ø–µ—Ä–∞—Ç–æ—Ä —É–¥–∞–ª–µ–Ω –∏–∑ –æ—á–µ—Ä–µ–¥–∏ –û–ö–ö');
        } catch (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏–∑ –æ—á–µ—Ä–µ–¥–∏:', error);
          // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã—Ö–æ–¥ –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∏–∑ –æ—á–µ—Ä–µ–¥–∏
        }
        
        localStorage.clear();
        window.location.href = '/login.html';
      };
    }
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ
    document.onclick = function(e) {
      if (!userName.contains(e.target) && !userDropdown.contains(e.target)) {
        userDropdown.style.display = 'none';
      }
    };
  };
  
  checkElements();
}


async function loadAnalytics(){
  try{
    // –û—Ç–¥–µ–ª—å–Ω—ã–π —Ç–æ—á–Ω—ã–π –æ–±–∑–æ—Ä –¥–ª—è –∫–∞—á–µ—Å—Ç–≤–∞
    const resp=await fetch('/api/quality/overview',{headers:{'Authorization':`Bearer ${localStorage.getItem('token')}`}});
    if(!resp.ok){throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏')}
    const stats=await resp.json();
    renderAnalytics(stats);
  }catch(e){notify(e.message,'error')}
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—á–µ—Ä–µ–¥–∏
async function loadQueueStats(){
  try{
    console.log('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ—á–µ—Ä–µ–¥–∏...');
    const resp=await fetch('/api/quality/queue-stats',{headers:{'Authorization':`Bearer ${localStorage.getItem('token')}`}});
    if(!resp.ok){
      console.error('‚ùå –û—à–∏–±–∫–∞ HTTP:', resp.status, resp.statusText);
      throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—á–µ—Ä–µ–¥–∏')
    }
    const stats=await resp.json();
    console.log('üìä –ü–æ–ª—É—á–µ–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—á–µ—Ä–µ–¥–∏:', stats);
    console.log('üîç –î–µ—Ç–∞–ª–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:');
    console.log('  - total_pending:', stats.total_pending);
    console.log('  - total_available_operators:', stats.total_available_operators);
    console.log('  - total_busy_operators:', stats.total_busy_operators);
    console.log('  - total_operators_on_shift:', stats.total_operators_on_shift);
    console.log('  - oldest_pending_review:', stats.oldest_pending_review);
    renderQueueStats(stats);
  }catch(e){
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—á–µ—Ä–µ–¥–∏:', e);
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    notify('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—á–µ—Ä–µ–¥–∏: ' + e.message, 'error');
  }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—á–µ—Ä–µ–¥–∏
function renderQueueStats(stats){
  console.log('üé® –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ—á–µ—Ä–µ–¥–∏:', stats);
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—è–≤–æ–∫ –≤ –æ—á–µ—Ä–µ–¥–∏
  const totalPendingEl = document.getElementById('totalPending');
  if (totalPendingEl) {
    totalPendingEl.textContent = stats.total_pending || 0;
    console.log('üìã –ó–∞—è–≤–æ–∫ –≤ –æ—á–µ—Ä–µ–¥–∏:', stats.total_pending || 0);
  }
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ –Ω–∞ —Å–º–µ–Ω–µ
  const totalOperatorsEl = document.getElementById('totalOperators');
  if (totalOperatorsEl) {
    totalOperatorsEl.textContent = stats.total_operators_on_shift || 0;
    console.log('üë• –û–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ –Ω–∞ —Å–º–µ–Ω–µ:', stats.total_operators_on_shift || 0);
  }
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤
  const availableOperatorsEl = document.getElementById('availableOperators');
  if (availableOperatorsEl) {
    availableOperatorsEl.textContent = stats.total_available_operators || 0;
    console.log('‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤:', stats.total_available_operators || 0);
  }
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —Å–∞–º—É—é —Å—Ç–∞—Ä—É—é –∑–∞—è–≤–∫—É
  const oldestPendingEl = document.getElementById('oldestPending');
  if (oldestPendingEl) {
    if (stats.oldest_pending_review) {
      const date = new Date(stats.oldest_pending_review);
      const now = new Date();
      const diffMinutes = Math.floor((now - date) / (1000 * 60));
      
      if (diffMinutes < 60) {
        oldestPendingEl.textContent = `${diffMinutes} –º–∏–Ω`;
      } else if (diffMinutes < 1440) {
        const hours = Math.floor(diffMinutes / 60);
        oldestPendingEl.textContent = `${hours} —á`;
      } else {
        const days = Math.floor(diffMinutes / 1440);
        oldestPendingEl.textContent = `${days} –¥–Ω`;
      }
    } else {
      oldestPendingEl.textContent = '‚Äî';
    }
  }
}



function renderAnalytics(s){
  const box=document.getElementById('analyticsSection');
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ –∂–µ –∫–∞—Ä—Ç–æ—á–∫–∏, —á—Ç–æ –∏ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π: called, success, conversion, earnings
  const called=s.processed||0;
  const success=s.approved||0;
  const conversion=(s.conversion_rate*100||0).toFixed(1)+'%';
  const earnings=(s.earnings||0).toFixed(2)+' ‚ÇΩ';
  const earningsToday=(s.earningsToday||0).toFixed(2)+' ‚ÇΩ';
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞—Ä–∞–±–æ—Ç–æ–∫ –≤ —à–∞–ø–∫–µ
  updateHeaderEarnings(s.earnings || 0);
  
  box.innerHTML=`
    <div class="stat-card">
      <div class="stat-value">${called}</div>
      <div class="stat-label">–ü—Ä–æ–≤–µ—Ä–µ–Ω–æ</div>
    </div>
    <div class="stat-card">
      <div class="stat-value">${success}</div>
      <div class="stat-label">–û–¥–æ–±—Ä–µ–Ω–æ</div>
    </div>
    <div class="stat-card">
      <div class="stat-value">${conversion}</div>
      <div class="stat-label">–ö–æ–Ω–≤–µ—Ä—Å–∏—è</div>
    </div>
    <div class="stat-card">
      <div class="stat-value">${earnings}</div>
      <div class="stat-label">–ó–∞—Ä–∞–±–æ—Ç–æ–∫</div>
    </div>
    <div class="stat-card">
      <div class="stat-value">${earningsToday}</div>
      <div class="stat-label">–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ —Å–µ–≥–æ–¥–Ω—è</div>
    </div>
    <div class="stat-card">
      <div class="stat-value">${s.avg_review_minutes||0} –º–∏–Ω</div>
      <div class="stat-label">–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏</div>
    </div>
    <div class="stat-card">
      <div class="stat-value">${s.avg_pending_wait_minutes||0} –º–∏–Ω</div>
      <div class="stat-label">–°—Ä–µ–¥–Ω–µ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –≤ –æ—á–µ—Ä–µ–¥–∏</div>
    </div>`;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞—Ä–∞–±–æ—Ç–∫–∞ –≤ —à–∞–ø–∫–µ
function updateHeaderEarnings(earnings) {
  const userEarnings = document.getElementById('userEarnings');
  if (userEarnings) {
    userEarnings.textContent = (earnings || 0).toFixed(2) + ' ‚ÇΩ';
  }
}

function bindEvents(){
  document.getElementById('getNextReviewBtn').addEventListener('click', getNextReview);
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω—é
  setTimeout(() => {
    setupUserMenu();
  }, 500);
}


async function loadMe(token){
  const resp=await fetch('/api/auth/me',{headers:{'Authorization':`Bearer ${token}`}});
  const data=await resp.json();
  currentUser=data.user;
  if(currentUser.role!=='quality'&&currentUser.role!=='admin'){window.location.href='/';}
}





// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —à–∞–ø–∫–∏
function setupStickyHeader() {
  const navbar = document.querySelector('.navbar');
  if (!navbar) return;
  
  // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–∫—Ä–æ–ª–ª–∞ - —à–∞–ø–∫–∞ –≤—Å–µ–≥–¥–∞ –≤–∏–¥–Ω–∞
  console.log('üìå –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —à–∞–ø–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ (–≤—Å–µ–≥–¥–∞ –≤–∏–¥–∏–º–∞—è)');
}



